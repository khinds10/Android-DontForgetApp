====================
== TODO
====================

	[] fix the stupid SMS problem

	[] add the missing strings and all that in strings.xml

	[] finish the sounds mapping and test

	[] finishing up
		[] make it an entirely new app with freemium version
			-- 2 new repos needed
	
====================
== TEST
====================

	[] Save
	[] Remind
	[] Email
	[] SMS
	
	[] Item rows show real data saved in the "status" table by pipe separation
		[] test all the combos
			-- also need to put in the email, phone # values
			-- test if the values are messed up, it should catch the exceptions!
			
	[] have mute sounds menu option
		[] have something saying that the sounds are muted or not below user settings :)
		
	[] height automatically adjusts correctly
		[] settings
			[] landscape
			[] potrait
			
		[] main
			[] landscape
			[] portrait
			
====================
== LONG TERM
====================
	
	 [] have a volume adjuster?
	 
	 [] have it make the LCARS bars and items list have a rotating hightlight
	 
	 [] the app can go through the internet to send somebody else a message (having this same app)
	 	-- have to have address or something, but this could be a harmful thing				
	 
	 [] Widgets
	 
	 	[] have cool borders or something
	 	
		[] the widgets should have custom font text from bitmaps
	
				What is needed is to render the font onto a canvas, and then pass it on to a bitmap and assign that to an ImageView. Like so:
				
					public Bitmap buildUpdate(String time) {
					    Bitmap myBitmap = Bitmap.createBitmap(160, 84, Bitmap.Config.ARGB_4444);
					    Canvas myCanvas = new Canvas(myBitmap);
					    Paint paint = new Paint();
					    Typeface clock = Typeface.createFromAsset(this.getAssets(),"Clockopia.ttf");
					    paint.setAntiAlias(true);
					    paint.setSubpixelText(true);
					    paint.setTypeface(clock);
					    paint.setStyle(Paint.Style.FILL);
					    paint.setColor(Color.WHITE);
					    paint.setTextSize(65);
					    paint.setTextAlign(Align.CENTER);
					    myCanvas.drawText(time, 80, 60, paint);
					    return myBitmap;
					}
			
				In the widget update
					String time = (String) DateFormat.format(mTimeFormat, mCalendar);
					RemoteViews views = new RemoteViews(getPackageName(), R.layout.main);
					views.setImageViewBitmap(R.id.TimeView, buildUpdate(time));
	